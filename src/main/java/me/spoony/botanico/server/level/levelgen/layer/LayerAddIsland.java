package me.spoony.botanico.server.level.levelgen.layer;

/**
 * Created by Colten on 4/23/2017.
 */
public class LayerAddIsland extends Layer {

  public LayerAddIsland(Layer child) {
    super(child);
  }

  /**
   * Returns a list of integer values generated by this layer. These may be interpreted as
   * temperatures, rainfall amounts, or biomeList[] indices based on the particular GenLayer
   * subclass.
   */
  public int[] getInts(int areaX, int areaY, int areaWidth, int areaHeight) {
    int childAreaX = areaX - 1;
    int childAreaY = areaY - 1;
    int childAreaWidth = areaWidth + 2;
    int childAreaHeight = areaHeight + 2;
    int[] childInts = this.child.getInts(childAreaX, childAreaY, childAreaWidth, childAreaHeight);
    int[] ret = new int[areaWidth * areaHeight];

    for (int yi = 0; yi < areaHeight; ++yi) {
      for (int xi = 0; xi < areaWidth; ++xi) {
        int k1 = childInts[xi + 0 + (yi + 0) * childAreaWidth];
        int l1 = childInts[xi + 2 + (yi + 0) * childAreaWidth];
        int i2 = childInts[xi + 0 + (yi + 2) * childAreaWidth];
        int j2 = childInts[xi + 2 + (yi + 2) * childAreaWidth];
        int k2 = childInts[xi + 1 + (yi + 1) * childAreaWidth];
        this.resetRand((xi + areaX), (yi + areaY));

        if (k2 != 0 || k1 == 0 && l1 == 0 && i2 == 0 && j2 == 0) {
          if (k2 > 0 && (k1 == 0 || l1 == 0 || i2 == 0 || j2 == 0)) {
            if (this.nextInt(5) == 0) {
              if (k2 == 4) {
                ret[xi + yi * areaWidth] = 4;
              } else {
                ret[xi + yi * areaWidth] = 0;
              }
            } else {
              ret[xi + yi * areaWidth] = k2;
            }
          } else {
            ret[xi + yi * areaWidth] = k2;
          }
        } else {
          int l2 = 1;
          int i3 = 1;

          if (k1 != 0 && this.nextInt(l2++) == 0) {
            i3 = k1;
          }

          if (l1 != 0 && this.nextInt(l2++) == 0) {
            i3 = l1;
          }

          if (i2 != 0 && this.nextInt(l2++) == 0) {
            i3 = i2;
          }

          if (j2 != 0 && this.nextInt(l2++) == 0) {
            i3 = j2;
          }

          if (this.nextInt(3) == 0) {
            ret[xi + yi * areaWidth] = i3;
          } else if (i3 == 4) {
            ret[xi + yi * areaWidth] = 4;
          } else {
            ret[xi + yi * areaWidth] = 0;
          }
        }
      }
    }

    return ret;
  }
}
